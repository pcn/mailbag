name: Publish populated conatiners to Docker
on:
  workflow_run:
    workflows:
      - release-please
    types:
      - completed


env:
  REGISTRY: ghcr.io
  NAMESPACE: pcn
  COURIER_IMGE_BASE_NAME: ${{ github.repository }}/courier
  DJBDNS_IMGE_BASE_NAME: ${{ github.repository }}/djbdns
  

jobs:
  push_mta_to_registry:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.MAILBAG_ACTION_PAT }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.COURIER_IMGE_BASE_NAME }}-mta

      - name: Filter paths
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            build-packages:
            - 'Dockerfile-*'

      - name: Build and push mta image
        uses: docker/build-push-action@v5
        id: mta
        # if: steps.changes.outputs.renderer == 'true'
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: mta-${{ steps.meta.outputs.labels }}
          file: Dockerfile-mta

  push_msa_to_registry:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.MAILBAG_ACTION_PAT }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.COURIER_IMGE_BASE_NAME }}-msa

      - name: Filter paths
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            build-packages:
            - 'Dockerfile-*'

      - name: Build and push msa image
        uses: docker/build-push-action@v5
        id: msa
        # if: steps.changes.outputs.renderer == 'true'
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: msa-${{ steps.meta.outputs.labels }}
          file: Dockerfile-msa

  push_courierd_to_registry:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.MAILBAG_ACTION_PAT }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.COURIER_IMGE_BASE_NAME }}-courierd

      - name: Filter paths
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            build-packages:
            - 'Dockerfile-*'

      - name: Build and push courierd image
        uses: docker/build-push-action@v5
        id: courierd
        # if: steps.changes.outputs.renderer == 'true'
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: courierd-${{ steps.meta.outputs.labels }}
          file: Dockerfile-courierd
          
  push_mta_ssl_to_registry:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.MAILBAG_ACTION_PAT }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.COURIER_IMGE_BASE_NAME }}-mta-ssl

      - name: Filter paths
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            build-packages:
            - 'Dockerfile-*'

      - name: Build and push mta-ssl image
        uses: docker/build-push-action@v5
        id: mta-ssl
        # if: steps.changes.outputs.renderer == 'true'
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: mta-ssl-${{ steps.meta.outputs.labels }}
          file: Dockerfile-mta-ssl

  push_impad_ssl_to_registry:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.MAILBAG_ACTION_PAT }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.COURIER_IMGE_BASE_NAME }}-impad-ssl

      - name: Filter paths
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            build-packages:
            - 'Dockerfile-*'
      - name: Build and push imapd-ssl image
        uses: docker/build-push-action@v5
        id: imapd-ssl
        # if: steps.changes.outputs.renderer == 'true'
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: imapd-ssl-${{ steps.meta.outputs.labels }}
          file: Dockerfile-imapd-ssl
        
  push_tinydns_to_registry:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.MAILBAG_ACTION_PAT }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.DJBDNS_IMGE_BASE_NAME }}-tinydns

      - name: Filter paths
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            build-packages:
            - 'Dockerfile-*'

      - name: Build and push tinydns image
        uses: docker/build-push-action@v5
        id: tinydns
        # if: steps.changes.outputs.renderer == 'true'
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: tinydns-${{ steps.meta.outputs.labels }}
          file: Dockerfile-tinydns
          
  # push_courierd_to_registry:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repo
  #       uses: actions/checkout@v4
  #     - name: Log in to the Container registry
  #       uses: docker/login-action@v3
  #       with:
  #         registry: ${{ env.REGISTRY }}
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.MAILBAG_ACTION_PAT }}

  #     - name: Extract metadata (tags, labels) for Docker
  #       id: meta
  #       uses: docker/metadata-action@v5
  #       with:
  #         images: |
  #           ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ env.IMAGE_BASE_NAME }}-courierd

  #     - name: Filter paths
  #       id: changes
  #       uses: dorny/paths-filter@v3
  #       with:
  #         filters: |
  #           build-packages:
  #           - 'Dockerfile-*'

  #     - name: Build and push courierd image
  #       uses: docker/build-push-action@v5
  #       id: courierd
  #       if: steps.changes.outputs.renderer == 'true'
  #       with:
  #         context: .
  #         push: true
  #         tags: ${{ steps.meta.outputs.tags }}
  #         labels: courierd-${{ steps.meta.outputs.labels }}
  #         file: Dockerfile-courierd
          
