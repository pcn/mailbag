#!/bin/bash

set -e -x -o pipefail

# context.json is added via the docker/container as a bind mount
/render-template --context /context.json --template /acceptmailfor.template > /etc/courier/esmtpacceptmailfor.dir/context
/render-template --context /context.json --template /hosteddomains.template > /etc/courier/hosteddomains
/render-template --context /context.json --template /esmtpd-base-mta-ssl.template > /etc/courier/esmtpd
/render-template --context /context.json --template /esmtpd-mta-ssl.template > /etc/courier/esmtpd-ssl

/usr/lib/courier/share/makeacceptmailfor
/usr/lib/courier/share/makehosteddomains
# Create empty esmtpaccess file if it doesn't exist
touch /etc/courier/esmtpaccess
# Skip makesmtpaccess if esmtpaccess is empty
[ -s /etc/courier/esmtpaccess ] && /usr/lib/courier/sbin/makesmtpaccess || echo "Empty esmtpaccess file, skipping makesmtpaccess"
# Skip makeuserdb if userdb directory is empty (no test users configured yet)
if [ "$(ls -A /etc/authlib/userdb 2>/dev/null)" ]; then
    /usr/sbin/makeuserdb
else
    echo "Empty userdb directory, skipping makeuserdb (no test users configured)"
fi
/usr/lib/courier/sbin/makealiases

/usr/sbin/authdaemond start

# Certificates are now mounted directly from cert-manager secrets at /certs/
# No need to copy or create certificate files - Courier uses them directly
# start the esmtpd-ssl and keep container alive (courierd runs in separate container)
/usr/lib/courier/sbin/esmtpd-ssl start

# Keep container alive by monitoring the service
while true; do
    if ! pgrep -f esmtpd-ssl > /dev/null; then
        echo "esmtpd-ssl stopped, restarting..."
        /usr/lib/courier/sbin/esmtpd-ssl start
    fi
    sleep 10
done
